{"version":3,"sources":["webpack://main-blog/../gatsby-theme-queuedlab/src/components/SEO/SEO.jsx","webpack://main-blog/../gatsby-theme-queuedlab/src/components/PostTags/PostTags.jsx","webpack://main-blog/../gatsby-theme-queuedlab/src/components/PostTags/PostTags.module.scss","webpack://main-blog/../gatsby-theme-queuedlab/src/templates/post.jsx","webpack://main-blog/../gatsby-theme-queuedlab/src/templates/post.module.scss"],"names":["SEO","render","title","description","image","postURL","this","props","postNode","postPath","postSEO","postMeta","frontmatter","summary","excerpt","cover","config","imageURI","match","authorJSONLD","name","email","address","blogURL","schemaOrgJSONLD","datePublished","date","push","itemListElement","position","headline","url","author","dateModified","content","type","JSON","stringify","property","Component","tags","className","map","tag","Link","key","to","PostTemplate","data","slug","pageContext","markdownRemark","post","id","Helmet","category","moment","format","dangerouslySetInnerHTML","__html","html","React"],"mappings":"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","file":"component---gatsby-theme-queuedlab-src-templates-post-jsx-c11c875cc61117cf5a95.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport config from \"../../../data/site-config\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.summary ? postMeta.summary : postNode.excerpt;\n      image = postMeta.cover ? postMeta.cover : config.siteLogo;\n      postURL = config.getFullPath(postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    const getImagePath = (imageURI) => {\n      if (!imageURI.match(\n        `(https?|ftp|file)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]`\n      )) {\n        return config.getFullPath(imageURI);\n      }\n      return imageURI;\n    };\n\n    image = getImagePath(image);\n\n    const authorJSONLD = {\n      \"@type\": \"Person\",\n      name: config.userName,\n      email: config.userEmail,\n      address: config.userLocation,\n    };\n\n    const blogURL = config.getFullPath(\"/\");\n    const schemaOrgJSONLD = [];\n\n    // TODO: separate this logic\n    if (postSEO) {\n      const getPublicationDate = () => {\n        if (!postNode) return null;\n        if (!postNode.frontmatter) return null;\n        if (!postNode.frontmatter.date) return null;\n\n        return postNode.frontmatter.date;\n      };\n      \n      const datePublished = getPublicationDate();\n\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              name: title,\n            },\n          ],\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          \"mainEntityOfPage\": {\n            \"@type\": \"WebPage\",\n            \"@id\": postURL\n          },\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          author: authorJSONLD,\n          datePublished,\n          dateModified: datePublished, // TODO: add modified date\n        }\n      );\n    }\n\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport * as style from \"./PostTags.module.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    if (!tags) return null;\n\n    return (\n      <div className={style.tagContainer}>\n        {tags.map(tag => (\n          <Link\n            key={tag}\n            to={`/tags/${_.kebabCase(tag)}`}\n            className={style.tag}\n          >\n            {`#${tag}`}\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","// extracted by mini-css-extract-plugin\nexport var tagContainer = \"PostTags-module--tagContainer--3tHGJ\";\nexport var tag = \"PostTags-module--tag--oNc8j\";","import React from \"react\";\nimport _ from \"lodash\";\nimport { Helmet } from \"react-helmet\";\nimport { Link, graphql } from \"gatsby\";\nimport config from \"../../data/site-config\";\nimport moment from \"../utils/moment\";\nimport Layout from \"../layout\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport SEO from \"../components/SEO/SEO\";\nimport \"./b16-tomorrow-dark.scss\";\nimport * as style from \"./post.module.scss\";\nimport \"katex/dist/katex.min.css\";\n\nexport default class PostTemplate extends React.Component {\n  render() {\n    const { data, pageContext } = this.props;\n    const { slug } = pageContext;\n    const postNode = data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n\n    return (\n      <Layout>\n        <Helmet>\n          <title>{`${post.title} | ${config.siteTitle}`}</title>\n        </Helmet>\n        <SEO postPath={slug} postNode={postNode} postSEO />\n        <div className={style.postContainer}>\n          <div className={style.titleContainer}>\n            <h1>{post.title}</h1>\n            {post.category && (\n              <Link className={style.category} to={`/categories/${_.kebabCase(post.category)}`}>\n                {post.category}\n              </Link>\n            )}\n            {post.summary && <div className={style.summary}>{post.summary}</div>}\n            <time className={style.date}>\n              {moment(postNode.frontmatter.date).format(config.dateFormat)}\n            </time>\n          </div>\n          <div\n            className={style.content}\n            dangerouslySetInnerHTML={{ __html: postNode.html }}\n          />\n          <PostTags tags={post.tags} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        category\n        tags\n        summary\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var postContainer = \"post-module--postContainer--1mzCk\";\nexport var titleContainer = \"post-module--titleContainer--1GcyE\";\nexport var summary = \"post-module--summary--13MD6\";\nexport var category = \"post-module--category--1mxHO\";\nexport var date = \"post-module--date--2CkFU\";\nexport var content = \"post-module--content--1tH15\";"],"sourceRoot":""}