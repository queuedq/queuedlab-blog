{"version":3,"sources":["webpack://main-blog/../gatsby-theme-queuedlab/src/components/PostListing/PostListing.jsx","webpack://main-blog/../gatsby-theme-queuedlab/src/components/PostListing/PostListing.module.scss","webpack://main-blog/../gatsby-theme-queuedlab/src/templates/tag.jsx"],"names":["getPostList","postList","this","props","postEdges","forEach","postEdge","push","path","node","fields","slug","category","frontmatter","tags","cover","title","summary","date","moment","format","config","excerpt","timeToRead","render","className","map","post","key","Link","to","React","TagTemplate","tag","pageContext","data","allMarkdownRemark","edges"],"mappings":"4NAsDA,E,sGA9CEA,YAAA,WACE,IAAMC,EAAW,GAcjB,OAbAC,KAAKC,MAAMC,UAAUC,SAAQ,SAAAC,GAC3BL,EAASM,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,SAAUN,EAASG,KAAKI,YAAYD,SACpCE,KAAMR,EAASG,KAAKI,YAAYC,KAChCC,MAAOT,EAASG,KAAKI,YAAYE,MACjCC,MAAOV,EAASG,KAAKI,YAAYG,MACjCC,QAASX,EAASG,KAAKI,YAAYI,QACnCC,MAAMC,OAAOb,EAASG,KAAKI,YAAYK,MAAME,OAAOC,gBACpDC,QAAShB,EAASG,KAAKa,QACvBC,WAAYjB,EAASG,KAAKc,gBAGvBtB,G,EAGTuB,OAAA,WACE,IAAMvB,EAAWC,KAAKF,cACtB,OACE,sBAAIyB,UC5BY,uCD8BdxB,EAASyB,KAAI,SAAAC,GAAI,OACf,sBAAIF,UC9BQ,sCD8BmBG,IAAKD,EAAKX,OACvC,sBAAIS,UC9BO,wCD+BT,gBAAC,EAAAI,KAAD,CAAMC,GAAIH,EAAKnB,MAAOmB,EAAKX,QAE5BW,EAAKf,SAEJ,gBAAC,EAAAiB,KAAD,CAAMJ,UClCM,0CDkCyBK,GAAE,eAAiB,IAAYH,EAAKf,WACtEe,EAAKf,UAEN,KACJ,wBAAMa,UCrCI,uCDqCwBE,EAAKT,MACtCS,EAAKV,QACJ,uBAAKQ,UCtCM,0CDsCyBE,EAAKV,SACzC,W,GAtCYc,c,uJEALC,E,6FACnBR,OAAA,WACE,IAAQS,EAAQ/B,KAAKC,MAAM+B,YAAnBD,IACF7B,EAAYF,KAAKC,MAAMgC,KAAKC,kBAAkBC,MACpD,OACE,gBAAC,IAAD,KACE,uBAAKZ,UAAU,iBACb,gBAAC,IAAD,CAAQT,MAAK,oBAAsBiB,EAAtB,OAAgCZ,gBAC7C,gBAAC,IAAD,CAAajB,UAAWA,O,GARO2B","file":"component---gatsby-theme-queuedlab-src-templates-tag-jsx-95f0c8566ac1c6965fbe.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { Link, graphql } from \"gatsby\";\nimport config from \"../../../data/site-config\";\nimport moment from \"../../utils/moment\";\nimport * as style from \"./PostListing.module.scss\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        category: postEdge.node.frontmatter.category,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        summary: postEdge.node.frontmatter.summary,\n        date: moment(postEdge.node.frontmatter.date).format(config.dateFormat),\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n\n  render() {\n    const postList = this.getPostList();\n    return (\n      <ul className={style.postList}>\n        {/* Your post list here. */\n        postList.map(post => (\n          <li className={style.postCard} key={post.title}>\n            <h3 className={style.postTitle}>\n              <Link to={post.path}>{post.title}</Link>\n            </h3>\n            {post.category\n            ? (\n              <Link className={style.postCategory} to={`/categories/${_.kebabCase(post.category)}`}>\n                {post.category}\n              </Link>\n            ) : null}\n            <time className={style.postDate}>{post.date}</time>\n            {post.summary\n            ? <div className={style.postSummary}>{post.summary}</div>\n            : null}\n          </li>\n        ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default PostListing;\n\nexport const query = graphql`\n  fragment PostMetadata on MarkdownRemark {\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      date\n      category\n      tags\n      cover\n      summary\n    }\n    fields {\n      slug\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var postList = \"PostListing-module--postList--a9nBb\";\nexport var postCard = \"PostListing-module--postCard--3gm17\";\nexport var postTitle = \"PostListing-module--postTitle--i5Ved\";\nexport var postCategory = \"PostListing-module--postCategory--OXFE2\";\nexport var postDate = \"PostListing-module--postDate--p2LuX\";\nexport var postSummary = \"PostListing-module--postSummary--2M7sN\";","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/site-config\";\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { tag } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"tag-container\">\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          ...PostMetadata\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}